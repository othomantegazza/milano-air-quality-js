---
title: "Milano Air Quality Dashboard"
format:
  html: 
    theme:
      - default
    #  - style/custom.scss
    page-layout: custom
    margin-left: 10px
    margin-top: 10px
    margin-right: 30px
    margin-bottom: 10px
editor_options: 
  chunk_output_type: console
---

```{r notes}
#| include: false
# https://www.eea.europa.eu/themes/air/air-quality-concentrations/AirQlimitvalues.png
# https://environment.ec.europa.eu/topics/air/air-quality/eu-air-quality-standards_en
# https://dati.comune.milano.it/dataset/ds573-valori-rilevati-per-i-principali-inquinanti-dell-aria
```

<!--- js dependencies -->
<script src="js/time-series-dot.js"></script>
<script src="js/heatmap.js"></script>
<script src="https://d3js.org/d3.v7.min.js"></script> 

```{r rpackages}
#| include: false
library(tidyverse)
library(here)
library(tsibble)
library(lubridate)
library(janitor)
```

```{r utils}
source(
  here(
    'R/utils.R'
  )
)
```


```{js}
//| echo: false
var height = 350
```


```{r pollutants}
#| include: false

# from https://environment.ec.europa.eu/topics/air/air-quality/eu-air-quality-standards_en
pollutants <- 
  tribble(~inquinante, ~pollutant_name, ~eu_limits,
          'C6H6', 'Polycyclic Aromatic Hydrocarbons', 1e-3,
          'CO', 'Carbon Monoxide', 1e4,
          'NO2', 'Nitrogen Dioxide', 40,
          'O3', 'Ozone', 120,
          'PM10', 'Particulate Matter', 40,
          'PM25', 'Fine Particles', 20,
          'SO2', 'Sulphur Dioxide', 125,
          )
```

```{r get-clean-data}
#| include: false
air_q_url <-
  'data/aq.csv'

air_q <- 
  air_q_url %>% 
  readr::read_delim(delim = ',') %>% 
  janitor::clean_names() %>% 
  rename(date = data) %>% 
  mutate(date = date %>% as_date()) %>% 
  mutate(
    across(
      .cols = inquinante,
      .fns = ~case_when(
        . == 'CO_8h' ~ 'CO',
        TRUE ~ .)
    ),
    # guessing real order of magnitude of measurements
    across(
      .cols = valore,
      .fns = ~case_when(
        inquinante == 'C6H6' ~ . * 1e-3,
        inquinante == 'CO' ~ . * 1e3,
        TRUE ~ .)
    )
  ) %>% 
  drop_na() %>% 
  left_join(pollutants)

air_q_scaled <- 
  air_q %>% 
  group_by(inquinante, eu_limits) %>% 
  nest(); air_q_scaled$scaled <- 
  air_q_scaled %>% 
  pmap(scale_pollutant); air_q_scaled <- 
  air_q_scaled %>% 
  unnest(scaled) %>% 
  select(-data)

ozone <- 
  air_q %>% 
  filter(inquinante == 'O3') %>% 
  drop_na()

ojs_define(
  all_scaled_in = air_q_scaled,
  ozone_in = ozone
  )
```

```{ojs}
//| echo: false
all_scaled = transpose(all_scaled_in)
ozone = transpose(ozone_in)
```

```{ojs}
getDates = d => Date.parse(d.date)

allDates = d3.map(all_scaled, getDates)
```

```{ojs}
viewof start = Inputs.date({label: "Start date",
                            value: d3.min(allDates),
                            min: d3.min(allDates),
                            max: d3.max(allDates)})
```


```{ojs}
viewof end = Inputs.date({label: "End date",
                            value: d3.max(allDates),
                            min: start,
                            max: d3.max(allDates)})   
```

:::::: {.grid}

::::: {.g-col-12 .g-col-xl-8}

::: {.g-col-12}

```{ojs heatmap}
//| echo: false
heatmap(all_scaled, {
  x: d => Date.parse(d.date)    ,
  y: d => d.inquinante,
  fill: d => d.scaled,
  xType: d3.scaleTime,
  xLabel: "Days →",
  yLabel: "↑ Concentration [µg/m3]",
  width,
  targetLimit: 1,
  height: height,
  columnsRatio: 8/12,
})
```

:::

:::: {.g-col-12}

::: {.panel-tabset}

### Ozone

```{ojs scatterplot}
//| echo: false
Scatterplot(ozone, {
  x: d => Date.parse(d.date)    ,
  y: d => d.valore,
  xType: d3.scaleTime,
  xLabel: "Days →",
  yLabel: "↑ Concentration [µg/m3]",
  stroke: "steelblue",
  width,
  height: height,
  columnsRatio: 8/12,
})
```

:::

::::

:::::

::::: {.g-col-12 .g-col-xl-4}

:::::

::::::